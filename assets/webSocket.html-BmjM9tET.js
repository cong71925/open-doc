import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,f as e}from"./app-BPf6K1Jt.js";const t={},p=e(`<h2 id="initwebsocket" tabindex="-1"><a class="header-anchor" href="#initwebsocket"><span>initWebSocket()</span></a></h2><p>初始化 WebSocket</p><ul><li>类型<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">initWebSocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="destroywebsocket" tabindex="-1"><a class="header-anchor" href="#destroywebsocket"><span>destroyWebSocket()</span></a></h2><p>关闭 WebSocket</p><ul><li>类型<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">destroyWebSocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="iswebsocketopen" tabindex="-1"><a class="header-anchor" href="#iswebsocketopen"><span>isWebSocketOpen()</span></a></h2><p>判断WebSocket是否处于可发送数据的状态</p><ul><li>类型<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">isWebSocketOpen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="sendmsg" tabindex="-1"><a class="header-anchor" href="#sendmsg"><span>sendMsg()</span></a></h2><p>使用WebSocket发送数据</p><ul><li><p>类型</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">sendMsg</span><span class="token punctuation">(</span>payload<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>详细信息</p><p>第一个参数为要发送的数据，支持<code>string</code>、<code>number</code>、<code>boolean</code>、<code>object</code>、<code>array</code>、<code>function</code>数据类型。</p><ul><li><p>传入的数据为<code>string</code>、<code>number</code>、<code>boolean</code>时会强制类型转换为<code>string</code>发送。</p></li><li><p>传入的数据为<code>object</code>、<code>array</code>时会调用<code>JSON.stringify</code>将其转换为json字符串后再发送。</p></li><li><p>传入的数据为<code>function</code>时会将函数的返回值发送。不支持Promise方法。</p></li></ul></li><li><p>示例</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> sendMsg <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/webSocket&#39;</span>
<span class="token doc-comment comment">/** 发送字符串 */</span>
<span class="token function">sendMsg</span><span class="token punctuation">(</span><span class="token string">&#39;测试数据&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> payload <span class="token operator">=</span> <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">&#39;测试标题&#39;</span><span class="token punctuation">,</span>
    data<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token number">3</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 发送object */</span>
<span class="token function">sendMsg</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="addlistener" tabindex="-1"><a class="header-anchor" href="#addlistener"><span>addListener()</span></a></h2><p>注册WebSocket监听器，当WebSocket接收到消息时触发传入的回调函数。</p><ul><li><p>类型</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">addListener</span><span class="token punctuation">(</span>cmd<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token function-variable function">listener</span><span class="token operator">:</span> <span class="token punctuation">(</span>arg0<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>详细信息</p><p>第一个参数为要监听的cmd，若WebSocket返回的数据中不包含cmd的情况下不会触发回调函数（如心跳包响应）。</p><p>第一个参数为监听回调函数，回调函数的参数为WebSocket返回的数据</p></li><li><p>示例</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> addListener <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/webSocket&#39;</span>
<span class="token keyword">const</span> <span class="token function-variable function">listener</span> <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">addListener</span><span class="token punctuation">(</span><span class="token string">&#39;demo&#39;</span><span class="token punctuation">,</span> listener<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="removelistener" tabindex="-1"><a class="header-anchor" href="#removelistener"><span>removeListener()</span></a></h2><p>卸载WebSocket监听器，一般用于Vue组件销毁时使用，避免内存泄露。</p><ul><li><p>类型</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">removeListener</span><span class="token punctuation">(</span>cmd<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token function-variable function">listener</span><span class="token operator">:</span> <span class="token punctuation">(</span>arg0<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>详细信息</p><p>第一个参数为要卸载的监听的cmd。</p><p>第一个参数为要卸载的监听回调函数。</p></li><li><p>示例</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> onBeforeUnmount <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> addListener<span class="token punctuation">,</span> removeListener <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/webSocket&#39;</span>
<span class="token keyword">const</span> <span class="token function-variable function">listener</span> <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">addListener</span><span class="token punctuation">(</span><span class="token string">&#39;demo&#39;</span><span class="token punctuation">,</span> listener<span class="token punctuation">)</span>
<span class="token doc-comment comment">/** 当Vue组件销毁时，卸载监听器 */</span>
<span class="token function">onBeforeUnmount</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">removeListener</span><span class="token punctuation">(</span><span class="token string">&#39;demo&#39;</span><span class="token punctuation">,</span> listener<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="sendheartbeat" tabindex="-1"><a class="header-anchor" href="#sendheartbeat"><span>sendHeartBeat()</span></a></h2><p>发送心跳包。</p><ul><li>类型<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">sendHeartBeat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="sendheartbeatinterval" tabindex="-1"><a class="header-anchor" href="#sendheartbeatinterval"><span>sendHeartBeatInterval()</span></a></h2><p>定时发送心跳包，同时会重置setInterval定时器。</p><ul><li>类型<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">sendHeartBeatInterval</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="stopsendheartbeatinterval" tabindex="-1"><a class="header-anchor" href="#stopsendheartbeatinterval"><span>stopSendHeartBeatInterval()</span></a></h2><p>关闭发送心跳包定时器。</p><ul><li>类型<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">sendHeartBeatInterval</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul>`,27),o=[p];function i(c,l){return s(),a("div",null,o)}const u=n(t,[["render",i],["__file","webSocket.html.vue"]]),k=JSON.parse('{"path":"/map/api/webSocket.html","title":"WebSocket","lang":"zh-CN","frontmatter":{"title":"WebSocket","order":4,"date":"2024-10-24T00:00:00.000Z","category":["开发文档","地图"],"description":"initWebSocket() 初始化 WebSocket 类型 destroyWebSocket() 关闭 WebSocket 类型 isWebSocketOpen() 判断WebSocket是否处于可发送数据的状态 类型 sendMsg() 使用WebSocket发送数据 类型 详细信息 第一个参数为要发送的数据，支持string、number、b...","head":[["meta",{"property":"og:url","content":"https://doc.congvps.fun/map/api/webSocket.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"WebSocket"}],["meta",{"property":"og:description","content":"initWebSocket() 初始化 WebSocket 类型 destroyWebSocket() 关闭 WebSocket 类型 isWebSocketOpen() 判断WebSocket是否处于可发送数据的状态 类型 sendMsg() 使用WebSocket发送数据 类型 详细信息 第一个参数为要发送的数据，支持string、number、b..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-24T08:47:14.000Z"}],["meta",{"property":"article:author","content":"狭雾"}],["meta",{"property":"article:published_time","content":"2024-10-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-24T08:47:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"WebSocket\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-10-24T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-24T08:47:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"狭雾\\",\\"url\\":\\"https://congvps.fun\\"}]}"]]},"headers":[{"level":2,"title":"initWebSocket()","slug":"initwebsocket","link":"#initwebsocket","children":[]},{"level":2,"title":"destroyWebSocket()","slug":"destroywebsocket","link":"#destroywebsocket","children":[]},{"level":2,"title":"isWebSocketOpen()","slug":"iswebsocketopen","link":"#iswebsocketopen","children":[]},{"level":2,"title":"sendMsg()","slug":"sendmsg","link":"#sendmsg","children":[]},{"level":2,"title":"addListener()","slug":"addlistener","link":"#addlistener","children":[]},{"level":2,"title":"removeListener()","slug":"removelistener","link":"#removelistener","children":[]},{"level":2,"title":"sendHeartBeat()","slug":"sendheartbeat","link":"#sendheartbeat","children":[]},{"level":2,"title":"sendHeartBeatInterval()","slug":"sendheartbeatinterval","link":"#sendheartbeatinterval","children":[]},{"level":2,"title":"stopSendHeartBeatInterval()","slug":"stopsendheartbeatinterval","link":"#stopsendheartbeatinterval","children":[]}],"git":{"createdTime":1729759634000,"updatedTime":1729759634000,"contributors":[{"name":"cong71925","email":"cong71925@gmail.com","commits":1}]},"readingTime":{"minutes":1.77,"words":530},"filePathRelative":"map/api/webSocket.md","localizedDate":"2024年10月24日","autoDesc":true}');export{u as comp,k as data};
