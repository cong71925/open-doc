import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as a,f as t}from"./app-rkg3-Q7I.js";const p={},e=t(`<h2 id="baselist" tabindex="-1"><a class="header-anchor" href="#baselist"><span>BaseList</span></a></h2><p>基本列表实体类。</p><ul><li><p>类型</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">new</span> <span class="token class-name">BaseList<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span>options<span class="token operator">?</span><span class="token operator">:</span> BaseListHookOptions<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> BaseListHook<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>详细信息</p><p>第一个参数是一个对象，支持以下这些选项：</p><ul><li><code>url</code>：一个对象。定义了列表相关的请求接口地址。支持以下这些选项： <ul><li><code>list</code>：请求列表的接口地址。</li><li><code>delete</code>：根据id删除列表的条目的接口地址。</li><li><code>add</code>：新增列表的条目的接口地址。</li><li><code>edit</code>：根据id编辑列表的条目的接口地址。</li></ul></li><li><code>pagination</code>：一个对象。分页器。支持以下这些选项： <ul><li><code>current</code>：数字类型。当前页数。默认为<code>1</code>。</li><li><code>pageSize</code>：数字类型。每页的条目数。默认为<code>10</code>。</li><li><code>total</code>：数字类型。列表的总条目数。默认为<code>0</code>。</li><li><code>pageSizeOptions</code>：数组类型。分页器可选的每页条目数。默认为<code>[&#39;10&#39;, &#39;20&#39;, &#39;30&#39;]</code></li></ul></li><li><code>queryParam</code>：一个对象。查询参数。</li><li><code>isorter</code>：一个对象。列表排序规则。支持以下这些选项： <ul><li><code>column</code>：字符串。要排序的字段名。默认为<code>&#39;createTime&#39;</code>。</li><li><code>order</code>：<code>&#39;asc&#39;</code>或<code>&#39;desc&#39;</code>。<code>&#39;asc&#39;</code>为升序，<code>&#39;desc&#39;</code>为降序。默认为<code>&#39;desc&#39;</code>。</li></ul></li><li><code>columns</code>：一个对象，类型继承自<code>ant-design-vue</code>的<code>TableProps[&#39;columns&#39;]</code>。</li><li><code>disableAutoLoad</code>：布尔值。为<code>true</code>时会关闭自动重新刷新列表，需要自己在合适的时机调用<code>loadData()</code>方法。</li></ul></li><li><p>示例</p><p>直接使用：</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 将BaseList实例化后解构出的响应式变量和方法绑定到列表 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-table</span>
        <span class="token attr-name">:dataSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:pagination</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pagination<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handlerTableChange<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">rowKey</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:row-selection</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ selectedRowKeys, onChange: handlerSelectionChange }<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-table</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> BaseList<span class="token punctuation">,</span> <span class="token punctuation">{</span> BaseListHookOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/baseList&#39;</span>
<span class="token doc-comment comment">/** 定义列表条目字段和类型 */</span>
<span class="token keyword">interface</span> <span class="token class-name">DemoItem</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> number
    <span class="token literal-property property">birthday</span><span class="token operator">:</span> string
    <span class="token literal-property property">dzb</span><span class="token operator">:</span> string
    <span class="token literal-property property">mz</span><span class="token operator">:</span> string
    <span class="token literal-property property">name</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 定义列表类参数 */</span>
<span class="token keyword">const</span> <span class="token literal-property property">options</span><span class="token operator">:</span> BaseListHookOptions<span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">list</span><span class="token operator">:</span> <span class="token string">&#39;zzgl/ztZzgl/list&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">sorter</span><span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">sorter</span><span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 实例化后解构出要使用的响应式变量和方法，并绑定到模板Html中 */</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> dataSource<span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> handlerTableChange<span class="token punctuation">,</span> columns<span class="token punctuation">,</span> handlerSelectionChange<span class="token punctuation">,</span> selectedRowKeys <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BaseList</span><span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用面向对象定义一个子类，再在业务中使用：</p><ul><li>定义一个子类<code>DemoList</code>继承自<code>BaseList</code>:<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> BaseListHook<span class="token punctuation">,</span> <span class="token punctuation">{</span> BaseListHookOptions<span class="token punctuation">,</span> Record <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/baseList&#39;</span>
<span class="token doc-comment comment">/** 定义列表条目字段和类型 */</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">DemoItem</span> <span class="token punctuation">{</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span>
    birthday<span class="token operator">:</span> <span class="token builtin">string</span>
    dzb<span class="token operator">:</span> <span class="token builtin">string</span>
    mz<span class="token operator">:</span> <span class="token builtin">string</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 定义子类DemoList继承自BaseList */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">DemoList</span> <span class="token keyword">extends</span> <span class="token class-name">BaseListHook<span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span>options<span class="token operator">?</span><span class="token operator">:</span> BaseListHookOptions<span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/** 重写默认值 */</span>
        <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token punctuation">{</span> list<span class="token operator">:</span> <span class="token string">&#39;zzgl/ztZzgl/list&#39;</span> <span class="token punctuation">}</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">{</span> url<span class="token punctuation">,</span> <span class="token operator">...</span>options <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 导出useHooks风格方法 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">useDemoList</span> <span class="token operator">=</span> <span class="token punctuation">(</span>options<span class="token operator">?</span><span class="token operator">:</span> BaseListHookOptions<span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">DemoList</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>在业务代码中使用：<div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-table</span>
        <span class="token attr-name">:dataSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:pagination</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pagination<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handlerTableChange<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">rowKey</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:row-selection</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ selectedRowKeys, onChange: handlerSelectionChange }<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-table</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> DemoList <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/demoList&#39;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> dataSource<span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> handlerTableChange<span class="token punctuation">,</span> columns<span class="token punctuation">,</span> handlerSelectionChange<span class="token punctuation">,</span> selectedRowKeys <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DemoList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
columns<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">sorter</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">sorter</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h2 id="实例方法" tabindex="-1"><a class="header-anchor" href="#实例方法"><span>实例方法</span></a></h2><h3 id="loaddata" tabindex="-1"><a class="header-anchor" href="#loaddata"><span>loadData()</span></a></h3><p>请求列表接口。</p><ul><li><p>类型</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">loadData</span><span class="token punctuation">(</span>method<span class="token operator">:</span> Method <span class="token operator">=</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Record<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>详细信息</p><p>第一个参数是一个字符串，定义了接口请求时的http请求方法。默认为<code>get</code>。可以为<code>get</code>、<code>post</code>、<code>delete</code>、<code>head</code>、<code>options</code>、<code>put</code>、<code>patch</code>、<code>purge</code>、<code>link</code>、<code>unlink</code>。</p><p>返回一个<code>Promise</code>，<code>resolve</code>时抛出一个数组，这个数组为此次请求的列表数据。</p></li><li><p>示例</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> BaseList<span class="token punctuation">,</span> <span class="token punctuation">{</span> BaseListHookOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/baseList&#39;</span>
<span class="token doc-comment comment">/** 定义列表条目字段和类型 */</span>
<span class="token keyword">interface</span> <span class="token class-name">DemoItem</span> <span class="token punctuation">{</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span>
    birthday<span class="token operator">:</span> <span class="token builtin">string</span>
    dzb<span class="token operator">:</span> <span class="token builtin">string</span>
    mz<span class="token operator">:</span> <span class="token builtin">string</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 定义列表类参数 */</span>
<span class="token keyword">const</span> options<span class="token operator">:</span> BaseListHookOptions<span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    url<span class="token operator">:</span> <span class="token punctuation">{</span>  list<span class="token operator">:</span> <span class="token string">&#39;zzgl/ztZzgl/list&#39;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token doc-comment comment">/** 禁用自动触发loadData */</span>
    disableAutoLoad<span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 从实例中解构出loadData */</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> loadData <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BaseList<span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span></span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
<span class="token doc-comment comment">/** 接口请求结束后打印列表数据 */</span>
<span class="token function">loadData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="cancelloaddata" tabindex="-1"><a class="header-anchor" href="#cancelloaddata"><span>cancelLoadData()</span></a></h3><p>取消列表请求。</p><ul><li>类型<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">cancelLoadData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>示例<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> BaseList<span class="token punctuation">,</span> <span class="token punctuation">{</span> BaseListHookOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/baseList&#39;</span>
<span class="token doc-comment comment">/** 定义列表条目字段和类型 */</span>
<span class="token keyword">interface</span> <span class="token class-name">DemoItem</span> <span class="token punctuation">{</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span>
    birthday<span class="token operator">:</span> <span class="token builtin">string</span>
    dzb<span class="token operator">:</span> <span class="token builtin">string</span>
    mz<span class="token operator">:</span> <span class="token builtin">string</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 定义列表类参数 */</span>
<span class="token keyword">const</span> options<span class="token operator">:</span> BaseListHookOptions<span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    url<span class="token operator">:</span> <span class="token punctuation">{</span>  list<span class="token operator">:</span> <span class="token string">&#39;zzgl/ztZzgl/list&#39;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token doc-comment comment">/** 禁用自动触发loadData */</span>
    disableAutoLoad<span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 从实例中解构出loadData */</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> loadData<span class="token punctuation">,</span> cancelLoadData <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BaseList<span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span></span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
<span class="token doc-comment comment">/** 接口请求结束后打印列表数据 */</span>
<span class="token function">loadData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/** 2s后接口未返回数据时中断请求 */</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>cancelLoadData<span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="getqueryparams" tabindex="-1"><a class="header-anchor" href="#getqueryparams"><span>getQueryParams()</span></a></h3><p>获取构造后的请求参数。</p><ul><li><p>类型</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">getQueryParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> 
    column<span class="token operator">:</span> <span class="token string">&#39;id&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;createTime&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;createBy&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;updateBy&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;updateTime&#39;</span> <span class="token operator">|</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">,</span>
    order<span class="token operator">:</span> <span class="token string">&#39;asc&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;desc&#39;</span><span class="token punctuation">,</span>
    pageNo<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
    pageSize<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span> <span class="token operator">&amp;</span> <span class="token constant">T</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>详细信息</p><p>返回值是一个对象。定义了<code>axios</code>中列表请求的<code>params</code>的实际传参。</p></li><li><p>示例</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useAxios <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/axios&#39;</span>
<span class="token keyword">import</span> BaseList <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/baseList&#39;</span>
<span class="token doc-comment comment">/** 从实例中解构出getQueryParams */</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> getQueryParams <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BaseList</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  disableAutoLoad<span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">useAxios</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span> url<span class="token operator">:</span> <span class="token string">&#39;zzgl/ztZzgl/list&#39;</span><span class="token punctuation">,</span> params<span class="token operator">:</span> <span class="token function">getQueryParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="deleterecord" tabindex="-1"><a class="header-anchor" href="#deleterecord"><span>deleteRecord()</span></a></h3><p>根据id删除对应的列表条目。</p><ul><li>类型<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">deleteRecord</span><span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">,</span> method<span class="token operator">:</span> Method <span class="token operator">=</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h3 id="editrecord" tabindex="-1"><a class="header-anchor" href="#editrecord"><span>editRecord()</span></a></h3><p>根据id编辑对应的列表条目。</p><ul><li>类型<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">editRecord</span><span class="token punctuation">(</span>record<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> method<span class="token operator">:</span> Method <span class="token operator">=</span> <span class="token string">&#39;PUT&#39;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h3 id="addrecord" tabindex="-1"><a class="header-anchor" href="#addrecord"><span>addRecord()</span></a></h3><p>新增列表条目。</p><ul><li>类型<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">addRecord</span><span class="token punctuation">(</span>record<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> method<span class="token operator">:</span> Method <span class="token operator">=</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="实例属性" tabindex="-1"><a class="header-anchor" href="#实例属性"><span>实例属性</span></a></h2><h3 id="datasource" tabindex="-1"><a class="header-anchor" href="#datasource"><span>dataSource</span></a></h3><p>列表数据源。</p><ul><li><p>类型</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> dataSource<span class="token operator">:</span> ref<span class="token operator">&lt;</span><span class="token punctuation">{</span> 
    createTime<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
    createBy<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> 
    updateBy<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> 
    updateTime<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> 
    id<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span>
<span class="token punctuation">}</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>详细信息</p><p>当前列表的响应式数据源，在js中要通过<code>.value</code>来赋值和取值。</p></li><li><p>示例</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 在模板中使用无需.value --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-table</span> <span class="token attr-name">:dataSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-table</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> BaseList<span class="token punctuation">,</span> <span class="token punctuation">{</span> BaseListHookOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/baseList&#39;</span>
<span class="token doc-comment comment">/** 定义列表条目字段和类型 */</span>
<span class="token keyword">interface</span> <span class="token class-name">DemoItem</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> number
    <span class="token literal-property property">birthday</span><span class="token operator">:</span> string
    <span class="token literal-property property">dzb</span><span class="token operator">:</span> string
    <span class="token literal-property property">mz</span><span class="token operator">:</span> string
    <span class="token literal-property property">name</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 定义列表类参数 */</span>
<span class="token keyword">const</span> <span class="token literal-property property">options</span><span class="token operator">:</span> BaseListHookOptions<span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>    
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token literal-property property">list</span><span class="token operator">:</span> <span class="token string">&#39;zzgl/ztZzgl/list&#39;</span>    <span class="token punctuation">}</span>   
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 实例化后解构出要使用的响应式变量和方法，并绑定到模板Html中 */</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> dataSource <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BaseList</span><span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
<span class="token doc-comment comment">/** 取值 */</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
<span class="token doc-comment comment">/** 赋值 */</span>
dataSource<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="url" tabindex="-1"><a class="header-anchor" href="#url"><span>url</span></a></h3><p>列表相关的请求接口地址。</p><ul><li><p>类型</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> url<span class="token operator">:</span> ref<span class="token operator">&lt;</span><span class="token punctuation">{</span>
    list<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
    <span class="token keyword">delete</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
    add<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
    edit<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>详细信息</p><p>当前列表的相关的请求接口地址，在js中要通过<code>.value</code>来赋值和取值。</p></li><li><p>示例</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> BaseList <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/baseList&#39;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> url<span class="token punctuation">,</span> loadData <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BaseList</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  disableAutoLoad<span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>
url<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">{</span> list<span class="token operator">:</span> <span class="token string">&#39;zzgl/ztZzgl/list&#39;</span> <span class="token punctuation">}</span>
<span class="token function">loadData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="columns" tabindex="-1"><a class="header-anchor" href="#columns"><span>columns</span></a></h3><p>列描述数据对象。</p><ul><li><p>类型</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> TableProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;ant-design-vue&#39;</span>
<span class="token keyword">type</span> <span class="token class-name">Record<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span> createTime<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> createBy<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> updateBy<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> updateTime<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> id<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> columns<span class="token operator">:</span> <span class="token punctuation">{</span> dataIndex<span class="token operator">?</span><span class="token operator">:</span> <span class="token keyword">keyof</span> Record<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> key<span class="token operator">?</span><span class="token operator">:</span> <span class="token keyword">keyof</span> Record<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span> TableProps<span class="token punctuation">[</span><span class="token string">&#39;columns&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>详细信息</p><p>当前列表的列描述的响应式数据对象，在js中要通过<code>.value</code>来赋值和取值。类型继承自<code>ant-design-vue</code>的<code>TableProps</code>，对<code>dataIndex</code>和<code>key</code>做了进一步约束。</p></li><li><p>示例</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 将BaseList实例化后解构出的响应式变量和方法绑定到列表 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-table</span>
        <span class="token attr-name">:dataSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-table</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> BaseList<span class="token punctuation">,</span> <span class="token punctuation">{</span> BaseListHookOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/baseList&#39;</span>
<span class="token doc-comment comment">/** 定义列表条目字段和类型 */</span>
<span class="token keyword">interface</span> <span class="token class-name">DemoItem</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> number
    <span class="token literal-property property">birthday</span><span class="token operator">:</span> string
    <span class="token literal-property property">dzb</span><span class="token operator">:</span> string
    <span class="token literal-property property">mz</span><span class="token operator">:</span> string
    <span class="token literal-property property">name</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 定义列表类参数 */</span>
<span class="token keyword">const</span> <span class="token literal-property property">options</span><span class="token operator">:</span> BaseListHookOptions<span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">list</span><span class="token operator">:</span> <span class="token string">&#39;zzgl/ztZzgl/list&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 实例化后解构出要使用的响应式变量和方法，并绑定到模板Html中 */</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> dataSource<span class="token punctuation">,</span> columns <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BaseList</span><span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
columns<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">sorter</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">sorter</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="queryparam" tabindex="-1"><a class="header-anchor" href="#queryparam"><span>queryParam</span></a></h3><p>查询参数。</p><ul><li><p>类型</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Record<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span> createTime<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> createBy<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> updateBy<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> updateTime<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> id<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> queryParam<span class="token operator">:</span> ref<span class="token operator">&lt;</span>Partial<span class="token operator">&lt;</span>Record<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>详细信息</p><p>当前列表的查询参数的响应式变量。在js中要通过<code>.value</code>来赋值和取值。</p></li><li><p>示例</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 将BaseList实例化后解构出的响应式变量和方法绑定到列表 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-table</span> <span class="token attr-name">:dataSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-table</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> BaseList<span class="token punctuation">,</span> <span class="token punctuation">{</span> BaseListHookOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/baseList&#39;</span>
<span class="token doc-comment comment">/** 定义列表条目字段和类型 */</span>
<span class="token keyword">interface</span> <span class="token class-name">DemoItem</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> number
    <span class="token literal-property property">birthday</span><span class="token operator">:</span> string
    <span class="token literal-property property">dzb</span><span class="token operator">:</span> string
    <span class="token literal-property property">mz</span><span class="token operator">:</span> string
    <span class="token literal-property property">name</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 定义列表类参数 */</span>
<span class="token keyword">const</span> <span class="token literal-property property">options</span><span class="token operator">:</span> BaseListHookOptions<span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">list</span><span class="token operator">:</span> <span class="token string">&#39;zzgl/ztZzgl/list&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 实例化后解构出要使用的响应式变量和方法，并绑定到模板Html中 */</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> dataSource<span class="token punctuation">,</span> queryParam <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BaseList</span><span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
<span class="token doc-comment comment">/** 限定条件为年龄18岁 */</span>
queryParam<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="isorter" tabindex="-1"><a class="header-anchor" href="#isorter"><span>isorter</span></a></h3><p>排序规则。</p><ul><li><p>类型</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Record<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span> createTime<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> createBy<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> updateBy<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> updateTime<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> id<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> isorter<span class="token operator">:</span> ref<span class="token operator">&lt;</span><span class="token punctuation">{</span> column<span class="token operator">:</span> <span class="token keyword">keyof</span> Record<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> order<span class="token operator">:</span> <span class="token string">&#39;asc&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;desc&#39;</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>详细信息</p><p>当前列表的排序规则的响应式变量。在js中要通过<code>.value</code>来赋值和取值。</p><ul><li><code>column</code>是要排序的字段。默认为<code>&#39;createTime&#39;</code>。</li><li><code>order</code>是排序的规则。赋值为<code>&#39;asc&#39;</code>时升序，<code>&#39;desc&#39;</code>是降序。默认为<code>&#39;desc&#39;</code>。</li></ul></li><li><p>示例</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 将BaseList实例化后解构出的响应式变量和方法绑定到列表 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-table</span> <span class="token attr-name">:dataSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-table</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> BaseList<span class="token punctuation">,</span> <span class="token punctuation">{</span> BaseListHookOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/baseList&#39;</span>
<span class="token doc-comment comment">/** 定义列表条目字段和类型 */</span>
<span class="token keyword">interface</span> <span class="token class-name">DemoItem</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> number
    <span class="token literal-property property">birthday</span><span class="token operator">:</span> string
    <span class="token literal-property property">dzb</span><span class="token operator">:</span> string
    <span class="token literal-property property">mz</span><span class="token operator">:</span> string
    <span class="token literal-property property">name</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 定义列表类参数 */</span>
<span class="token keyword">const</span> <span class="token literal-property property">options</span><span class="token operator">:</span> BaseListHookOptions<span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">list</span><span class="token operator">:</span> <span class="token string">&#39;zzgl/ztZzgl/list&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 实例化后解构出要使用的响应式变量和方法，并绑定到模板Html中 */</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> dataSource<span class="token punctuation">,</span> isorter <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BaseList</span><span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
<span class="token doc-comment comment">/** 列表按照年龄降序排序 */</span>
isorter<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">column</span><span class="token operator">:</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">order</span><span class="token operator">:</span> <span class="token string">&#39;desc&#39;</span> <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="pagination" tabindex="-1"><a class="header-anchor" href="#pagination"><span>pagination</span></a></h3><p>分页器。</p><ul><li><p>类型</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> pagination<span class="token operator">:</span> ref<span class="token operator">&lt;</span><span class="token punctuation">{</span>
    current<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
    pageSize<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
    total<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
    pageSizeOptions<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>详细信息</p><p>当前列表的分页器的响应式变量。在js中要通过<code>.value</code>来赋值和取值。</p><ul><li><code>current</code>：数字类型。当前页数。默认为<code>1</code>。</li><li><code>pageSize</code>：数字类型。每页的条目数。默认为<code>10</code>。</li><li><code>total</code>：数字类型。列表的总条目数。默认为<code>0</code>。</li><li><code>pageSizeOptions</code>：数组类型。分页器可选的每页条目数。默认为<code>[&#39;10&#39;, &#39;20&#39;, &#39;30&#39;]</code></li></ul></li><li><p>示例</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 将BaseList实例化后解构出的响应式变量和方法绑定到列表 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-table</span> <span class="token attr-name">:dataSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:pagination</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pagination<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-table</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> BaseList<span class="token punctuation">,</span> <span class="token punctuation">{</span> BaseListHookOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/baseList&#39;</span>
<span class="token doc-comment comment">/** 定义列表条目字段和类型 */</span>
<span class="token keyword">interface</span> <span class="token class-name">DemoItem</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> number
    <span class="token literal-property property">birthday</span><span class="token operator">:</span> string
    <span class="token literal-property property">dzb</span><span class="token operator">:</span> string
    <span class="token literal-property property">mz</span><span class="token operator">:</span> string
    <span class="token literal-property property">name</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 定义列表类参数 */</span>
<span class="token keyword">const</span> <span class="token literal-property property">options</span><span class="token operator">:</span> BaseListHookOptions<span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">list</span><span class="token operator">:</span> <span class="token string">&#39;zzgl/ztZzgl/list&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 实例化后解构出要使用的响应式变量和方法，并绑定到模板Html中 */</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> dataSource<span class="token punctuation">,</span> pagination <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BaseList</span><span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
<span class="token doc-comment comment">/** 切换到第二页 */</span>
pagination<span class="token punctuation">.</span>value<span class="token punctuation">.</span>current <span class="token operator">=</span> <span class="token number">2</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="loading" tabindex="-1"><a class="header-anchor" href="#loading"><span>loading</span></a></h3><p>列表加载标识符。</p><ul><li><p>类型</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> loading<span class="token operator">:</span> ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>详细信息 当前列表的加载标识符的响应式变量。在js中要通过<code>.value</code>来赋值和取值。</p></li><li><p>示例</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 将BaseList实例化后解构出的响应式变量和方法绑定到列表 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-table</span> <span class="token attr-name">:dataSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:loading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>loading<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-table</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> BaseList<span class="token punctuation">,</span> <span class="token punctuation">{</span> BaseListHookOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/baseList&#39;</span>
<span class="token doc-comment comment">/** 定义列表条目字段和类型 */</span>
<span class="token keyword">interface</span> <span class="token class-name">DemoItem</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> number
    <span class="token literal-property property">birthday</span><span class="token operator">:</span> string
    <span class="token literal-property property">dzb</span><span class="token operator">:</span> string
    <span class="token literal-property property">mz</span><span class="token operator">:</span> string
    <span class="token literal-property property">name</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 定义列表类参数 */</span>
<span class="token keyword">const</span> <span class="token literal-property property">options</span><span class="token operator">:</span> BaseListHookOptions<span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">list</span><span class="token operator">:</span> <span class="token string">&#39;zzgl/ztZzgl/list&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 实例化后解构出要使用的响应式变量和方法，并绑定到模板Html中 */</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> dataSource<span class="token punctuation">,</span> loading <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BaseList</span><span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="selectedrowkeys" tabindex="-1"><a class="header-anchor" href="#selectedrowkeys"><span>selectedRowKeys</span></a></h3><p>选中的行key数组。</p><ul><li>类型<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> selectedRowKeys<span class="token operator">:</span> ref<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>示例<div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 将BaseList实例化后解构出的响应式变量和方法绑定到列表 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-table</span> <span class="token attr-name">:dataSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rowKey</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:row-selection</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ selectedRowKeys, onChange: handlerSelectionChange }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-table</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> BaseList<span class="token punctuation">,</span> <span class="token punctuation">{</span> BaseListHookOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/baseList&#39;</span>
<span class="token doc-comment comment">/** 定义列表条目字段和类型 */</span>
<span class="token keyword">interface</span> <span class="token class-name">DemoItem</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> number
    <span class="token literal-property property">birthday</span><span class="token operator">:</span> string
    <span class="token literal-property property">dzb</span><span class="token operator">:</span> string
    <span class="token literal-property property">mz</span><span class="token operator">:</span> string
    <span class="token literal-property property">name</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 定义列表类参数 */</span>
<span class="token keyword">const</span> <span class="token literal-property property">options</span><span class="token operator">:</span> BaseListHookOptions<span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">list</span><span class="token operator">:</span> <span class="token string">&#39;zzgl/ztZzgl/list&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 实例化后解构出要使用的响应式变量和方法，并绑定到模板Html中 */</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> dataSource<span class="token punctuation">,</span> selectedRowKeys<span class="token punctuation">,</span> handlerSelectionChange <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BaseList</span><span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="selectedrows" tabindex="-1"><a class="header-anchor" href="#selectedrows"><span>selectedRows</span></a></h3><p>选中的行。</p><ul><li>类型<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> selectedRows<span class="token operator">:</span> ref<span class="token operator">&lt;</span>Record<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>示例<div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 将BaseList实例化后解构出的响应式变量和方法绑定到列表 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-table</span> <span class="token attr-name">:dataSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rowKey</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:row-selection</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ selectedRowKeys, onChange: handlerSelectionChange }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-table</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> watch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> BaseList<span class="token punctuation">,</span> <span class="token punctuation">{</span> BaseListHookOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/baseList&#39;</span>
<span class="token doc-comment comment">/** 定义列表条目字段和类型 */</span>
<span class="token keyword">interface</span> <span class="token class-name">DemoItem</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> number
    <span class="token literal-property property">birthday</span><span class="token operator">:</span> string
    <span class="token literal-property property">dzb</span><span class="token operator">:</span> string
    <span class="token literal-property property">mz</span><span class="token operator">:</span> string
    <span class="token literal-property property">name</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 定义列表类参数 */</span>
<span class="token keyword">const</span> <span class="token literal-property property">options</span><span class="token operator">:</span> BaseListHookOptions<span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">list</span><span class="token operator">:</span> <span class="token string">&#39;zzgl/ztZzgl/list&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 实例化后解构出要使用的响应式变量和方法，并绑定到模板Html中 */</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> dataSource<span class="token punctuation">,</span> selectedRowKeys<span class="token punctuation">,</span> selectedRows<span class="token punctuation">,</span> handlerSelectionChange <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BaseList</span><span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
<span class="token doc-comment comment">/** 监听选中行的变化 */</span>
<span class="token function">watch</span><span class="token punctuation">(</span>selectedRows<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="handlertablechange" tabindex="-1"><a class="header-anchor" href="#handlertablechange"><span>handlerTableChange()</span></a></h3><p>表格change事件回调函数。</p><ul><li>类型<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> TablePaginationConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;ant-design-vue&#39;</span>
<span class="token keyword">const</span> <span class="token function-variable function">handlerTableChange</span><span class="token operator">:</span> <span class="token punctuation">(</span>pagination<span class="token operator">:</span> TablePaginationConfig<span class="token punctuation">,</span> filters<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> sorter<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>示例<div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 将BaseList实例化后解构出的响应式变量和方法绑定到列表 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-table</span>
        <span class="token attr-name">:dataSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:pagination</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pagination<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handlerTableChange<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-table</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> BaseList<span class="token punctuation">,</span> <span class="token punctuation">{</span> BaseListHookOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/baseList&#39;</span>
<span class="token doc-comment comment">/** 定义列表条目字段和类型 */</span>
<span class="token keyword">interface</span> <span class="token class-name">DemoItem</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> number
    <span class="token literal-property property">birthday</span><span class="token operator">:</span> string
    <span class="token literal-property property">dzb</span><span class="token operator">:</span> string
    <span class="token literal-property property">mz</span><span class="token operator">:</span> string
    <span class="token literal-property property">name</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 定义列表类参数 */</span>
<span class="token keyword">const</span> <span class="token literal-property property">options</span><span class="token operator">:</span> BaseListHookOptions<span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">list</span><span class="token operator">:</span> <span class="token string">&#39;zzgl/ztZzgl/list&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">sorter</span><span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">sorter</span><span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 实例化后解构出要使用的响应式变量和方法，并绑定到模板Html中 */</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> dataSource<span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> handlerTableChange<span class="token punctuation">,</span> columns <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BaseList</span><span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="handlerselectionchange" tabindex="-1"><a class="header-anchor" href="#handlerselectionchange"><span>handlerSelectionChange()</span></a></h3><p>表格行选择change事件回调函数。</p><ul><li>类型<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">handlerSelectionChange</span><span class="token operator">:</span> <span class="token punctuation">(</span>selectedRowKeys<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> selectedRows<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>示例<div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 将BaseList实例化后解构出的响应式变量和方法绑定到列表 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-table</span> <span class="token attr-name">:dataSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rowKey</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:row-selection</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ selectedRowKeys, onChange: handlerSelectionChange }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-table</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> watch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> BaseList<span class="token punctuation">,</span> <span class="token punctuation">{</span> BaseListHookOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/baseList&#39;</span>
<span class="token doc-comment comment">/** 定义列表条目字段和类型 */</span>
<span class="token keyword">interface</span> <span class="token class-name">DemoItem</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> number
    <span class="token literal-property property">birthday</span><span class="token operator">:</span> string
    <span class="token literal-property property">dzb</span><span class="token operator">:</span> string
    <span class="token literal-property property">mz</span><span class="token operator">:</span> string
    <span class="token literal-property property">name</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 定义列表类参数 */</span>
<span class="token keyword">const</span> <span class="token literal-property property">options</span><span class="token operator">:</span> BaseListHookOptions<span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">list</span><span class="token operator">:</span> <span class="token string">&#39;zzgl/ztZzgl/list&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/** 实例化后解构出要使用的响应式变量和方法，并绑定到模板Html中 */</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> dataSource<span class="token punctuation">,</span> selectedRowKeys<span class="token punctuation">,</span> selectedRows<span class="token punctuation">,</span> handlerSelectionChange <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BaseList</span><span class="token operator">&lt;</span>DemoItem<span class="token operator">&gt;</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul>`,56),o=[e];function l(c,i){return n(),a("div",null,o)}const k=s(p,[["render",l],["__file","baseList.html.vue"]]),d=JSON.parse('{"path":"/map/hooks/baseList.html","title":"BaseList","lang":"zh-CN","frontmatter":{"title":"BaseList","order":2,"date":"2024-10-25T00:00:00.000Z","category":["开发文档","地图"],"description":"BaseList 基本列表实体类。 类型 详细信息 第一个参数是一个对象，支持以下这些选项： url：一个对象。定义了列表相关的请求接口地址。支持以下这些选项： list：请求列表的接口地址。 delete：根据id删除列表的条目的接口地址。 add：新增列表的条目的接口地址。 edit：根据id编辑列表的条目的接口地址。 pagination：一个对...","head":[["meta",{"property":"og:url","content":"https://doc.congvps.fun/map/hooks/baseList.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"BaseList"}],["meta",{"property":"og:description","content":"BaseList 基本列表实体类。 类型 详细信息 第一个参数是一个对象，支持以下这些选项： url：一个对象。定义了列表相关的请求接口地址。支持以下这些选项： list：请求列表的接口地址。 delete：根据id删除列表的条目的接口地址。 add：新增列表的条目的接口地址。 edit：根据id编辑列表的条目的接口地址。 pagination：一个对..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-29T09:56:28.000Z"}],["meta",{"property":"article:author","content":"狭雾"}],["meta",{"property":"article:published_time","content":"2024-10-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-29T09:56:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"BaseList\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-10-25T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-29T09:56:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"狭雾\\",\\"url\\":\\"https://congvps.fun\\"}]}"]]},"headers":[{"level":2,"title":"BaseList","slug":"baselist","link":"#baselist","children":[]},{"level":2,"title":"实例方法","slug":"实例方法","link":"#实例方法","children":[{"level":3,"title":"loadData()","slug":"loaddata","link":"#loaddata","children":[]},{"level":3,"title":"cancelLoadData()","slug":"cancelloaddata","link":"#cancelloaddata","children":[]},{"level":3,"title":"getQueryParams()","slug":"getqueryparams","link":"#getqueryparams","children":[]},{"level":3,"title":"deleteRecord()","slug":"deleterecord","link":"#deleterecord","children":[]},{"level":3,"title":"editRecord()","slug":"editrecord","link":"#editrecord","children":[]},{"level":3,"title":"addRecord()","slug":"addrecord","link":"#addrecord","children":[]}]},{"level":2,"title":"实例属性","slug":"实例属性","link":"#实例属性","children":[{"level":3,"title":"dataSource","slug":"datasource","link":"#datasource","children":[]},{"level":3,"title":"url","slug":"url","link":"#url","children":[]},{"level":3,"title":"columns","slug":"columns","link":"#columns","children":[]},{"level":3,"title":"queryParam","slug":"queryparam","link":"#queryparam","children":[]},{"level":3,"title":"isorter","slug":"isorter","link":"#isorter","children":[]},{"level":3,"title":"pagination","slug":"pagination","link":"#pagination","children":[]},{"level":3,"title":"loading","slug":"loading","link":"#loading","children":[]},{"level":3,"title":"selectedRowKeys","slug":"selectedrowkeys","link":"#selectedrowkeys","children":[]},{"level":3,"title":"selectedRows","slug":"selectedrows","link":"#selectedrows","children":[]},{"level":3,"title":"handlerTableChange()","slug":"handlertablechange","link":"#handlertablechange","children":[]},{"level":3,"title":"handlerSelectionChange()","slug":"handlerselectionchange","link":"#handlerselectionchange","children":[]}]}],"git":{"createdTime":1730107266000,"updatedTime":1730195788000,"contributors":[{"name":"cong71925","email":"cong71925@gmail.com","commits":2}]},"readingTime":{"minutes":10.55,"words":3166},"filePathRelative":"map/hooks/baseList.md","localizedDate":"2024年10月25日","autoDesc":true}');export{k as comp,d as data};
