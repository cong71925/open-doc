import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,f as t}from"./app-rkg3-Q7I.js";const e={},p=t(`<h2 id="querytype" tabindex="-1"><a class="header-anchor" href="#querytype"><span>QueryType</span></a></h2><p>高级查询类型。</p><ul><li>类型<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">enum</span> QueryType <span class="token punctuation">{</span>
    and <span class="token operator">=</span> <span class="token string">&#39;and&#39;</span><span class="token punctuation">,</span>
    or <span class="token operator">=</span> <span class="token string">&#39;or&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="fieldtype" tabindex="-1"><a class="header-anchor" href="#fieldtype"><span>FieldType</span></a></h2><p>高级查询字段的字段类型。</p><ul><li>类型<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">enum</span> FieldType <span class="token punctuation">{</span>
    String <span class="token operator">=</span> <span class="token string">&#39;String&#39;</span><span class="token punctuation">,</span>
    Int <span class="token operator">=</span> <span class="token string">&#39;int&#39;</span><span class="token punctuation">,</span>
    DateTime <span class="token operator">=</span> <span class="token string">&#39;datetime&#39;</span><span class="token punctuation">,</span>
    Date <span class="token operator">=</span> <span class="token string">&#39;date&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="fieldrule" tabindex="-1"><a class="header-anchor" href="#fieldrule"><span>FieldRule</span></a></h2><p>高级查询字段的的查询规则。</p><ul><li>类型<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">enum</span> FieldRule <span class="token punctuation">{</span>
    等于 <span class="token operator">=</span> <span class="token string">&#39;eq&#39;</span><span class="token punctuation">,</span>
    不等于 <span class="token operator">=</span> <span class="token string">&#39;ne&#39;</span><span class="token punctuation">,</span>
    大于 <span class="token operator">=</span> <span class="token string">&#39;gt&#39;</span><span class="token punctuation">,</span>
    大于等于 <span class="token operator">=</span> <span class="token string">&#39;ge&#39;</span><span class="token punctuation">,</span>
    小于 <span class="token operator">=</span> <span class="token string">&#39;lt&#39;</span><span class="token punctuation">,</span>
    小于等于 <span class="token operator">=</span> <span class="token string">&#39;le&#39;</span><span class="token punctuation">,</span>
    包含 <span class="token operator">=</span> <span class="token string">&#39;like&#39;</span><span class="token punctuation">,</span>
    以xx开始 <span class="token operator">=</span> <span class="token string">&#39;right_like&#39;</span><span class="token punctuation">,</span>
    以xx结尾 <span class="token operator">=</span> <span class="token string">&#39;left_like&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="queryitem" tabindex="-1"><a class="header-anchor" href="#queryitem"><span>queryItem()</span></a></h2><p>返回一种查询类型的查询项。</p><ul><li>类型<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">queryItem</span> <span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>field<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> type<span class="token operator">:</span> FieldType<span class="token punctuation">,</span> rule<span class="token operator">:</span> FieldRule<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> rule<span class="token operator">:</span> FieldRule<span class="token punctuation">,</span> type<span class="token operator">:</span> FieldType<span class="token punctuation">,</span> val<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> field<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="queryitems" tabindex="-1"><a class="header-anchor" href="#queryitems"><span>queryItems()</span></a></h2><p>返回多个一种查询类型的查询项。</p><ul><li>类型<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">queryItems</span> <span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>field<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> type<span class="token operator">:</span> FieldType<span class="token punctuation">,</span> rule<span class="token operator">:</span> FieldRule<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> rule<span class="token operator">:</span> FieldRule<span class="token punctuation">,</span> type<span class="token operator">:</span> FieldType<span class="token punctuation">,</span> val<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> field<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="getsuperqueryobj" tabindex="-1"><a class="header-anchor" href="#getsuperqueryobj"><span>getSuperQueryObj()</span></a></h2><p>构造一个高级查询项。</p><ul><li><p>类型</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getSuperQueryObj</span> <span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>queryType<span class="token operator">:</span> QueryType<span class="token punctuation">,</span> <span class="token operator">...</span>arr<span class="token operator">:</span> QueryItem<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> superQueryParams<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> superQueryMatchType<span class="token operator">:</span> QueryType <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>详细信息</p><p>第一个参数为高级查询类型，应使用枚举值<code>queryType</code>。</p><p>剩余参数为查询项，应使用<code>queryItem()</code>。</p><p>返回值是一个对象，里面有这些属性：</p><ul><li><code>superQueryParams</code>：高级查询参数字符串。</li><li><code>superQueryMatchType</code>：高级查询类型。</li></ul></li><li><p>示例</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useAxios <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/axios&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getSuperQueryObj<span class="token punctuation">,</span> queryItem<span class="token punctuation">,</span> FieldType<span class="token punctuation">,</span> FieldRule<span class="token punctuation">,</span> QueryType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/superQuery&#39;</span>
<span class="token keyword">const</span> superQueryObj <span class="token operator">=</span> <span class="token function">getSuperQueryObj</span><span class="token punctuation">(</span>
    QueryType<span class="token punctuation">.</span>and<span class="token punctuation">,</span> 
    <span class="token function">queryItem</span><span class="token punctuation">(</span><span class="token string">&#39;字段名&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;字段值&#39;</span><span class="token punctuation">,</span> FieldType<span class="token punctuation">.</span>DateTime<span class="token punctuation">,</span> FieldRule<span class="token punctuation">.</span>大于等于<span class="token punctuation">)</span><span class="token punctuation">,</span> 
    <span class="token function">queryItem</span><span class="token punctuation">(</span><span class="token string">&#39;字段名&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;字段值&#39;</span><span class="token punctuation">,</span> FieldType<span class="token punctuation">.</span>DateTime<span class="token punctuation">,</span> FieldRule<span class="token punctuation">.</span>小于<span class="token punctuation">)</span>
<span class="token punctuation">)</span>

<span class="token doc-comment comment">/** 在请求接口时使用 */</span>
<span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">useAxios</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    url<span class="token operator">:</span> <span class="token string">&#39;/sys/sysRoleTree/queryUserTreeTagList&#39;</span><span class="token punctuation">,</span>
    method<span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
    params<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span>superQueryObj <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="getsuperquery" tabindex="-1"><a class="header-anchor" href="#getsuperquery"><span>getSuperQuery()</span></a></h2><p>构造一个高级查询项。</p><ul><li><p>类型</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getSuperQuery</span> <span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>queryType<span class="token operator">:</span> QueryType<span class="token punctuation">,</span> <span class="token operator">...</span>arr<span class="token operator">:</span> QueryItem<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>详细信息</p><p>第一个参数为高级查询类型，应使用枚举值<code>queryType</code>。</p><p>剩余参数为查询项，应使用<code>queryItem()</code>。</p><p>返回值是一个字符串，可拼接在接口请求的url后使用。</p></li><li><p>示例</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useAxios <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/axios&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getSuperQuery<span class="token punctuation">,</span> queryItem<span class="token punctuation">,</span> FieldType<span class="token punctuation">,</span> FieldRule<span class="token punctuation">,</span> QueryType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/superQuery&#39;</span>
<span class="token keyword">const</span> superQueryStr <span class="token operator">=</span> <span class="token function">getSuperQuery</span><span class="token punctuation">(</span>
    QueryType<span class="token punctuation">.</span>and<span class="token punctuation">,</span> 
    <span class="token function">queryItem</span><span class="token punctuation">(</span><span class="token string">&#39;字段名&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;字段值&#39;</span><span class="token punctuation">,</span> FieldType<span class="token punctuation">.</span>DateTime<span class="token punctuation">,</span> FieldRule<span class="token punctuation">.</span>大于等于<span class="token punctuation">)</span><span class="token punctuation">,</span> 
    <span class="token function">queryItem</span><span class="token punctuation">(</span><span class="token string">&#39;字段名&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;字段值&#39;</span><span class="token punctuation">,</span> FieldType<span class="token punctuation">.</span>DateTime<span class="token punctuation">,</span> FieldRule<span class="token punctuation">.</span>小于<span class="token punctuation">)</span>
<span class="token punctuation">)</span>

<span class="token doc-comment comment">/** 在请求接口时使用 */</span>
<span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">useAxios</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    url<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/sys/sysRoleTree/queryUserTreeTagList?</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>superQueryStr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    method<span class="token operator">:</span> <span class="token string">&#39;get&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="getsuperquerylist" tabindex="-1"><a class="header-anchor" href="#getsuperquerylist"><span>getSuperQueryList()</span></a></h2><p>嵌套复杂高级查询。</p><ul><li><p>类型</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">getSuperQueryList</span> <span class="token punctuation">(</span>queryType<span class="token operator">:</span> QueryType<span class="token punctuation">,</span> <span class="token operator">...</span>arr<span class="token operator">:</span> QueryObj<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>详细信息</p><p>第一个参数为高级查询类型，应使用枚举值<code>queryType</code>。</p><p>剩余参数为高级查询项，应使用<code>getSuperQueryObj()</code>。</p><p>返回值是一个字符串，可拼接在接口请求的url后使用。</p></li><li><p>示例</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useAxios <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/axios&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getSuperQueryList<span class="token punctuation">,</span> getSuperQueryObj<span class="token punctuation">,</span> queryItem<span class="token punctuation">,</span> FieldType<span class="token punctuation">,</span> FieldRule<span class="token punctuation">,</span> QueryType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/superQuery&#39;</span>

<span class="token keyword">const</span> superQueryStr <span class="token operator">=</span> <span class="token function">getSuperQueryList</span><span class="token punctuation">(</span>
    QueryType<span class="token punctuation">.</span>or<span class="token punctuation">,</span>
    <span class="token function">getSuperQueryObj</span><span class="token punctuation">(</span>
        QueryType<span class="token punctuation">.</span>and<span class="token punctuation">,</span> 
        <span class="token function">queryItem</span><span class="token punctuation">(</span><span class="token string">&#39;字段名1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;字段值&#39;</span><span class="token punctuation">,</span> FieldType<span class="token punctuation">.</span>DateTime<span class="token punctuation">,</span> FieldRule<span class="token punctuation">.</span>大于等于<span class="token punctuation">)</span><span class="token punctuation">,</span> 
        <span class="token function">queryItem</span><span class="token punctuation">(</span><span class="token string">&#39;字段名1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;字段值&#39;</span><span class="token punctuation">,</span> FieldType<span class="token punctuation">.</span>DateTime<span class="token punctuation">,</span> FieldRule<span class="token punctuation">.</span>小于<span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">getSuperQueryObj</span><span class="token punctuation">(</span>
        QueryType<span class="token punctuation">.</span>and<span class="token punctuation">,</span> 
        <span class="token function">queryItem</span><span class="token punctuation">(</span><span class="token string">&#39;字段名2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;字段值&#39;</span><span class="token punctuation">,</span> FieldType<span class="token punctuation">.</span>DateTime<span class="token punctuation">,</span> FieldRule<span class="token punctuation">.</span>大于等于<span class="token punctuation">)</span><span class="token punctuation">,</span> 
        <span class="token function">queryItem</span><span class="token punctuation">(</span><span class="token string">&#39;字段名2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;字段值&#39;</span><span class="token punctuation">,</span> FieldType<span class="token punctuation">.</span>DateTime<span class="token punctuation">,</span> FieldRule<span class="token punctuation">.</span>小于<span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">)</span>

<span class="token doc-comment comment">/** 在请求接口时使用 */</span>
<span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">useAxios</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    url<span class="token operator">:</span> url<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/sys/sysRoleTree/queryUserTreeTagList?</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>superQueryStr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    method<span class="token operator">:</span> <span class="token string">&#39;get&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul>`,24),o=[p];function c(i,l){return s(),a("div",null,o)}const k=n(e,[["render",c],["__file","superQuery.html.vue"]]),d=JSON.parse('{"path":"/map/api/superQuery.html","title":"高级查询器","lang":"zh-CN","frontmatter":{"title":"高级查询器","order":5,"date":"2024-10-24T00:00:00.000Z","category":["开发文档","地图"],"description":"QueryType 高级查询类型。 类型 FieldType 高级查询字段的字段类型。 类型 FieldRule 高级查询字段的的查询规则。 类型 queryItem() 返回一种查询类型的查询项。 类型 queryItems() 返回多个一种查询类型的查询项。 类型 getSuperQueryObj() 构造一个高级查询项。 类型 详细信息 第一个参...","head":[["meta",{"property":"og:url","content":"https://doc.congvps.fun/map/api/superQuery.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"高级查询器"}],["meta",{"property":"og:description","content":"QueryType 高级查询类型。 类型 FieldType 高级查询字段的字段类型。 类型 FieldRule 高级查询字段的的查询规则。 类型 queryItem() 返回一种查询类型的查询项。 类型 queryItems() 返回多个一种查询类型的查询项。 类型 getSuperQueryObj() 构造一个高级查询项。 类型 详细信息 第一个参..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-24T08:47:14.000Z"}],["meta",{"property":"article:author","content":"狭雾"}],["meta",{"property":"article:published_time","content":"2024-10-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-24T08:47:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"高级查询器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-10-24T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-24T08:47:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"狭雾\\",\\"url\\":\\"https://congvps.fun\\"}]}"]]},"headers":[{"level":2,"title":"QueryType","slug":"querytype","link":"#querytype","children":[]},{"level":2,"title":"FieldType","slug":"fieldtype","link":"#fieldtype","children":[]},{"level":2,"title":"FieldRule","slug":"fieldrule","link":"#fieldrule","children":[]},{"level":2,"title":"queryItem()","slug":"queryitem","link":"#queryitem","children":[]},{"level":2,"title":"queryItems()","slug":"queryitems","link":"#queryitems","children":[]},{"level":2,"title":"getSuperQueryObj()","slug":"getsuperqueryobj","link":"#getsuperqueryobj","children":[]},{"level":2,"title":"getSuperQuery()","slug":"getsuperquery","link":"#getsuperquery","children":[]},{"level":2,"title":"getSuperQueryList()","slug":"getsuperquerylist","link":"#getsuperquerylist","children":[]}],"git":{"createdTime":1729759634000,"updatedTime":1729759634000,"contributors":[{"name":"cong71925","email":"cong71925@gmail.com","commits":1}]},"readingTime":{"minutes":2.34,"words":703},"filePathRelative":"map/api/superQuery.md","localizedDate":"2024年10月24日","autoDesc":true}');export{k as comp,d as data};
